import{ImageDisplay,Canvas,CDEUtils}from"cdejs";export class ImageToTextConverter{static DEFAULT_CHARACTER_SETS={VERY_LOW:[..." .:"],DOTS:[..." .Â·':"],LOW:[..." .:-~=+oOXHM"],LOW_LARGE:["  "," ."," :"," -"," ~"," ="," +"," o"," O"," X"," H"," M"],LOW_REVERSED:[..."MHXOo+=~-:. "],MIDDLE:[..." .:-~=+oOXHMB8$W%@#â–‘â–’â–“â–ˆ"],HIGH_RANGE:[..." Ë™.Â·';:,-^~=+coOXHMB8$W%@#â–‘â–’â–“â–ˆ"],HIGH_CENTRAL_SHADING:[..."MWVXvuo+;:-`. .`-:;+ouvXVMW"],HIGH_CENTRAL_SHADING_REVERSED:[..." .,:;~-+=oO0BDWM#@â–ˆ@#MWDB0Oo=+-~;:,. "],TEST_ASCII:["â–‘","â–’","â–“","â–ˆ"],TEST_ASCII2:[" ","â–‘","â–’","â–“","â–ˆ"]};static DEFAULT_CHARACTER_SET=ImageToTextConverter.DEFAULT_CHARACTER_SETS.LOW;static DEFAULT_CVS_SIZE=[...ImageDisplay.RESOLUTIONS.MAX];static DEFAULT_MEDIA_SIZE=["90%","45%"];static DEFAULT_MEDIA_ERROR_CALLBACK=(errorCode,media)=>console.warn("Error while loading media:",ImageDisplay.getErrorFromCode(errorCode),"("+media+")");#cachedRange=null;constructor(resultCB,sourceMedia,maxMediaInputSize=ImageToTextConverter.DEFAULT_CVS_SIZE,pxGroupingSize=5,charSet,maxRefreshRate=30){this._CVS=this.#createCVS(maxMediaInputSize,maxRefreshRate),this._resultCB=resultCB,this._pxGroupingSize=pxGroupingSize||5,this._charSet=charSet??ImageToTextConverter.DEFAULT_CHARACTER_SET,this.#updateCachedRange(),this._media=null,sourceMedia&&this.loadMedia(sourceMedia)}#createCVS(sizeOrCanvas,maxRefreshRate){let canvas=null;canvas=Array.isArray(sizeOrCanvas)?new OffscreenCanvas(sizeOrCanvas[0],sizeOrCanvas[1]):sizeOrCanvas instanceof Canvas?sizeOrCanvas.cvs:sizeOrCanvas instanceof HTMLCanvasElement||sizeOrCanvas instanceof OffscreenCanvas?sizeOrCanvas:new OffscreenCanvas(...ImageToTextConverter.DEFAULT_CVS_SIZE);return new Canvas(canvas,()=>{this._media?.initialized&&this._resultCB(this.#getText(this.#mapPixels(this._pxGroupingSize)))},maxRefreshRate,null,null,null,!0)}#updateCachedRange(){let range=[0],c_ll=this._charSet.length,rangeDivision=255/c_ll;for(let i=1;i<c_ll;i++)range[i]=range[i-1]+rangeDivision;this.#cachedRange=range}loadMedia(sourceMedia,size=[...ImageToTextConverter.DEFAULT_MEDIA_SIZE],readyCB=null,errorCB=ImageToTextConverter.DEFAULT_MEDIA_ERROR_CALLBACK){this.clear(),this._media=new ImageDisplay(sourceMedia,[0,0],size,errorCB,img=>{img.isDynamic?this._CVS.start():(this._CVS.stop(),this.generate()),CDEUtils.isFunction(readyCB)&&readyCB(this)},null,null,!0),this._CVS.add(this._media)}#mapPixels(pxGroupingSize){let x,y,atY,atX,atI,CVS=this._CVS,media=this._media,width=(media.width|0)>CVS.width?CVS.width:media.width|0,height=(media.height|0)>CVS.height?CVS.height:media.height|0,data=CVS.ctx.getImageData(0,0,width,height).data,pxGroupingCount=pxGroupingSize**2*4,bigPxCountX=width/pxGroupingSize,bigPxCountY=height/pxGroupingSize,bigPixels=[],minDif=CDEUtils.getAcceptableDiff;for(y=0;y<height;y+=pxGroupingSize)for(atY=y*pxGroupingSize,x=0;x<width;x+=pxGroupingSize){atX=x*pxGroupingSize;const overflow=width-(x+pxGroupingSize),bigPx=[],offsetX=minDif(atX/pxGroupingSize/width*bigPxCountX*pxGroupingSize*4,1e-6),offsetY=minDif(atY/pxGroupingSize/height*bigPxCountY*pxGroupingCount*bigPxCountX,1e-6);for(let i=0,adjust=0;i<pxGroupingCount;i+=4){i/4%pxGroupingSize||!i||(adjust=4*width*(i/pxGroupingCount*pxGroupingSize)-i),atI=offsetX+offsetY+i+adjust;const r=data[atI],g=data[atI+1],b=data[atI+2];bigPx.push(!data[atI+3]||null==r||null==g||null==b||i/4%pxGroupingSize>=pxGroupingSize+overflow?null:(r+g+b)/3)}let b_ll=bigPx.length,total=0,nullCount=0;for(let i=0;i<b_ll;i++){const pxAvg=bigPx[i];null==pxAvg?nullCount++:total+=pxAvg}bigPixels.push([y,total/(b_ll-nullCount)||0])}return bigPixels}#getText(pixelMappingResults){let range=this.#cachedRange,chars=this._charSet,c_ll=chars.length,p_ll=pixelMappingResults.length,textResults="",lastY=0;for(let i=0;i<p_ll;i++){let bigPx=pixelMappingResults[i],y=bigPx[0],avg=bigPx[1],atValue=-1,charIndex=0;for(let i=0;i<c_ll;i++){const newValue=range[i];newValue<=avg&&newValue>atValue&&(atValue=newValue,charIndex=i)}y!=lastY&&(textResults+="\n"),textResults+=chars[charIndex],lastY=y}return textResults}createHTMLFileInput(id=null,onInputCB=null){const usesOldInput=id instanceof HTMLInputElement,input=usesOldInput?id:document.createElement("input");return input.type="file",id&&!usesOldInput&&(input.id=id),input.accept=ImageDisplay.getSupportedHTMLAcceptValue(),input.oninput=()=>{const file=imgInput.files[0];if(CDEUtils.isFunction(onInputCB)&&onInputCB(file,this),file)if(ImageDisplay.isVideoFormatSupported(file))this.loadMedia(ImageDisplay.loadVideo(file));else if(ImageDisplay.isImageFormatSupported(file)){const fileReader=new FileReader;fileReader.onload=e=>this.loadMedia(ImageDisplay.loadImage(e.target.result,null,!0)),fileReader.readAsDataURL(file)}},input}generate(){this._CVS.drawSingleFrame()}clear(){this._CVS.removeAllObjects(),this._CVS.clear()}get CVS(){return this._CVS}get cvs(){return this._CVS.cvs}get size(){return this._CVS.size}get charSet(){return this._charSet}get media(){return this._media}get pxGroupingSize(){return this._pxGroupingSize}get resultCB(){return this._resultCB}get maxRefreshRate(){return this._CVS.fpsLimit}set size(size){this._CVS.width=size[0],this._CVS.height=size[1]}set charSet(charSet){this._charSet="string"==typeof charSet?[...charSet]:charSet,this.#updateCachedRange()}set pxGroupingSize(pxGroupingSize){this._pxGroupingSize=pxGroupingSize}set maxRefreshRate(maxRefreshRate){this._CVS.fpsLimit=maxRefreshRate}set resultCB(resultCB){this._resultCB=resultCB}}